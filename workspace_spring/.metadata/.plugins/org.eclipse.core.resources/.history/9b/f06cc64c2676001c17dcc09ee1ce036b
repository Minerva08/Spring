function nowpage(url) {
	const mypage_a = document.querySelectorAll('.myPage_left > div > ul > li > a')
	for (let i = 0; i < mypage_a.length; i++) {
		if (mypage_a[i].getAttribute('href') + '' == url + '') {
			mypage_a[i].style.color = 'black'
			mypage_a[i].style.fontWeight = 'bold'
			return
		}
	}
}

function clickHandler(event) {
	for (let i = 0; i < border_bottom.length; i++) {
		if (i === +event.target.dataset.n) {
			border_bottom[i].classList.add('border_bottom')
			border_bottom[i].style.paddingBottom = '0px'
			border_bottom[i].firstElementChild.style.color = 'red'
			border_bottom[i].lastElementChild.style.color = 'black'
			border_bottom[i].lastElementChild.style.fontWeight = 'bold'
		}
		else {
			border_bottom[i].classList.remove('border_bottom')
			border_bottom[i].style.paddingBottom = '2px'
			border_bottom[i].firstElementChild.style.color = 'black'
			border_bottom[i].lastElementChild.style.color = 'gray'
			border_bottom[i].lastElementChild.style.fontWeight = ''
		}
	}
}

function origin_pw_check(originpw){
	console.log("여기")
	const pw = $("#set_originpw").val()
	const input_pw = $("#set_originpw")
    const msg = $("#msg_set_originpw")

    console.log(originpw)
    if (pw == originpw) {
    	msg.css('color', 'blue');
    	msg.css('font-size', '12px');
    	msg.css('display', 'inline-block');
    	msg.css('margin', '0');
    	msg.text('일치');
    } 
    else if(pw!= null && pw != originpw) {
    	msg.text('');
    	msg.css('color', 'red');
    	msg.css('font-size', '12px');
    	msg.css('display', 'inline-block');
    	msg.css('margin', '0');
    	msg.text('현재비밀번호가 일치하지 않습니다.');
        input_pw.focus()
    }
    
    
}


function info_duplicate_nick(event){
	event.preventDefault()
	 console.log('여기')
	
    if(nickname_set.value==''){
       msg_nick.innerText='닉네임을 입력해주세요'
    	msg_nick.style.color='red'
        nickname_set.focus()
        return row
    }
  
    else{
    	let url = cpath+'/duplicateNick?user_nickname='+nickname_set.value
        console.log(url)
        const opt={
            method:'GET'
        }

        fetch(url, opt)
        .then(resp => resp.json())
        .then(json => {
            console.log(typeof json)
            msg_nick.innerText = json.msg
            msg_nick.style.color=json.color
            if(msg_nick.style.color=='red'){
    	    	nickname_set.value=''
    	    	nickname_set.focus()
    	    }
            else if(msg_nick.style.color=='blue'){
            	const ob = {}	
       			const formData = new FormData(event.target)
       			formData.append('user_email',c_nick.dataset.email);
       			
       			for(key of formData.keys()) {
      	 			console.log(key,': ',formData.get(key))
       				ob[key] = formData.get(key)
       			}
       			
       		
       			const url = cpath + '/modifyNick'
       			const opt = {
       				method: 'POST',
       				body: JSON.stringify(ob),
       				headers: {
       					'Content-Type': 'application/json; charset=utf-8'
       				}
       			}
       			
       			// 3) 전송 후 받은 응답에 따라 이후 처리 진행
       			fetch(url, opt)
       			.then(resp => resp.text())
       			.then(text => {
       				console.log(text)
       				if(text == 1) {
       					alert('닉네임변경')
       					location.replace("/main/myPage/info/update")
       				}
       				
       				
       			}) 
            }
            
        })
    }
    
	
}























