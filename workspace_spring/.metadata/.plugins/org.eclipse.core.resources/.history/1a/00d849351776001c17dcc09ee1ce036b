package com.itbank.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.itbank.model.AddressDTO;
import com.itbank.model.MemberDTO;
import com.itbank.model.MypageDTO;
import com.itbank.service.AddressService;
import com.itbank.service.MemberService;

@Controller
public class MypageController {
	@Autowired MemberService ms;
	@Autowired AddressService as;
	
	
	@RequestMapping("/myPage/home_myPage")
	public String myPage() {
		return "/myPage/home_myPage";
	}
	
	@GetMapping("/myPage/buyList")
	public String buyList() {
		return "/myPage/buyList";
	}
	
	@GetMapping("/myPage/saleList")
	public String saleList() {
		return "/myPage/saleList";
	}
	
	@GetMapping("/myPage/wishList")
	public String wishList() {
		return "/myPage/wishList";
	}
	
	@GetMapping("/myPage/info")
	public ModelAndView info(HttpSession session) {
		MemberDTO dto = (MemberDTO) session.getAttribute("login");
		ModelAndView mav = new ModelAndView();
		
		MypageDTO info = new MypageDTO();

		info.setUser_nickname(dto.getUser_nickname());
		info.setUser_pnum(dto.getUser_pnum());
		info.setUser_profile_img(dto.getUser_profile_img());
	
		info.setUser_pw(dto.getUser_pw().replaceAll(dto.getUser_pw(), "●●●●●●●●●●"));
		
		String[] email= dto.getUser_email().split("@");
		String new_email="";
		for(int i=1;i<=email[0].length();i++) {
			if(i==1) new_email+=email[0].charAt(0);
			else if(i>1&&i<=email[0].length()-1) {
				new_email+="*";
			}
			else if(i==email[0].length()) {
				new_email+=email[0].charAt(email[0].length()-1);
				
			}
		}
		info.setUser_email(new_email+"@"+email[1]);
		System.out.println(info);
		mav.addObject("info", info);
		return mav;
	}
	
	@GetMapping("/myPage/address")
	public ModelAndView address(HttpSession session) {
		MemberDTO dto = (MemberDTO)session.getAttribute("login");
		System.out.println(dto);
		
		String user_email = dto.getUser_email();
		ModelAndView mav = new ModelAndView();
		
		List<MypageDTO> list = as.find_address(user_email);
		
		for(int i=0;i<list.size();i++) {
			System.out.println(list.get(i));
			list.get(i).setAddress_name(list.get(i).getAddress_name().charAt(0)+"**");
			String pnum="";
			String pnum_f="";
			String pnum_m="";
			String pnum_e="";
			
			pnum_f+=list.get(i).getAddress_pnum().substring(0, 3);
			pnum_m+=list.get(i).getAddress_pnum().substring(3, 4);
			pnum_m+="●●●-●";
			pnum_e+=list.get(i).getAddress_pnum().substring(8, list.get(i).getAddress_pnum().length());
			pnum=pnum_f+pnum_m+pnum_e;
			list.get(i).setAddress_pnum(pnum);
			list.get(i).setAddress(list.get(i).getAddress());
		}
		System.out.println(list);
		mav.addObject("list",list);
		return mav;
	}
	
	@GetMapping("/myPage/info/update")
	public String infoUpdate(HttpSession session){
		String email = ((MemberDTO)session.getAttribute("login")).getUser_email();
		System.out.println(email);
	
		MemberDTO login = ms.modify_info(email);
		session.setAttribute("login", login);
		return "redirect:/myPage/info";
	}
	
	
	@GetMapping("/myPage/account")
	public String account() {
		return "/myPage/account";
	}
	
	
	@PostMapping("/modifyPw")
	@ResponseBody
	public int postmodifyPw(@RequestBody HashMap<String, String> map) {
		
		return ms.modify_pw(map);
	}
	
	@PostMapping("/modifyNick")
	@ResponseBody
	public int postmodifyNick(@RequestBody HashMap<String, String> map) {
		
		return ms.modify_nick(map);
	}
	
	@PostMapping("/modifyPnum")
	@ResponseBody
	public int postmodifyPnum(@RequestBody HashMap<String, String> map) {
		
		return ms.modify_pnum(map);
	}
	
	@PostMapping("/ProfileImgDelete")
	@ResponseBody
	public int profileImgDelete(@RequestBody HashMap<String, String> map) {
		System.out.println(ms.modify_img(map));
		return ms.modify_img(map);
	}
	
	
	
	
	//프로필 이미지 업로드
	
	
}
